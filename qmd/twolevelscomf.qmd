# 2수준 요인배치법 - 교락법 {#sec-twolevelcomf}

```{r warning=FALSE, echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
source(here::here("common", "_common.R"))
```

## 교과서 예제 8.2 


반복이 없는 $2^4$ 요인배치법에서 16회의 실험을 동일한 환경에서 실시할 수 없어서 상호작용효과  $ACD$ 와 $BCD$ 를 블럭과 교락시켜서 실험하였다 (교과서 예제 8.2, 230 페이지)


### 실험자료의 생성 


먼저 16개의 실험 처리 조합을 표준 순서로서 생성하자. `default.level=c(0,1)` 은 요인의 수준을
0과 1로 표시하는 옵션이다.

```{r}
X <- FrF2(nruns=16, nfactors=4, randomize = FALSE,  default.level=c(0,1))
X
```
실험의 표준 순서는 다음과 같이 `yates()`  함수를 이용하여 알 수 있다.

```{r}
yates(rep(0,16))
```

그리고 처리의 표준 순서로 실험값과 블럭변수를 입력한다. 그리고 처리조합 정보 `X` 와 결합하여 최종 자료인 `df` 를 만들자.    

```{r,echo=F, out.width="80%", fig.asp=1.0, fig.align='center', fig.cap='예제 8.2 자료' }
knitr::include_graphics("../images/ex82.png")
```

```{r}
y <- c(45,71, 48, 65, 68, 60, 80, 65, 43, 100, 45, 104, 75, 86, 70, 96 )
block <- factor(c(1, 3, 2, 4, 4, 2, 3, 1, 4, 2, 3, 1, 1, 3, 2, 4))
treat <- c("0", names(yates(rep(0,16))))
df0 <- data.frame(block=block, treat=treat,  y=y )
df <- cbind(X, df0)
```

```{r}
df %>%  kbl() %>%   kable_paper("hover", full_width = F)
```

위의 실험 자료를 블럭과 처리 순으로 정렬해 보자.

```{r}
df %>% arrange( block, treat)
```

### 선형표현식

이제 위에서 생성된 자료에서 상호작용효과  $ACD$ 와 $BCD$ 가 블록과 교락되어 있는지
선형표현식을 이용하여 확인해 보자. 

$$
\begin{aligned}
L_1 & = x_1 + x_3 + x_4 (\text{mod}2) \\
L_2 & = x_2 + x_3 + x_4 (\text{mod}2)
\end{aligned}
$$

예를 들어 블럭 1 ($L_1=0, L_2=0$) 에 베치된 처리에 대하여 선형식의 값을 구해보자.

|  블럭  |  처리 | $L_1 (ACD)$ | $L_2 (BCD)$ |
|:--------:|:-------:|:-------:|:-------:|
|  1  | $(0)$   |   $\texttt{MOD} (0+0+0, 2) = 0$ |  $\texttt{MOD} (0+0+0, 2) = 0$ |
|  1  | $ABC$  |   $\texttt{MOD} (1+1+0, 2) = 0$ |  $\texttt{MOD} (1+1+0, 2) = 0$ |
|  1  | $ABD$    |   $\texttt{MOD} (1+0+1, 2) = 0$ |  $\texttt{MOD} (1+0+1, 2) = 0$ |
|  1  | $CD$   |   $\texttt{MOD} (0+1+1, 2) = 0$ |  $\texttt{MOD} (0+1+1, 2) = 0$ |


예를 들어 블럭 2 ($L_1=0, L_2=1$) 에 베치된 처리에 대하여 선형식의 값을 구해보자.

|  블럭  |  처리 | $L_1 (ACD)$ | $L_2 (BCD)$ |
|:--------:|:-------:|:-------:|:-------:|
|  2  | $AC$   |   $\texttt{MOD} (1+1+0, 2) = 0$ |  $\texttt{MOD} (0+1+0, 2) = 1$ |
|  2  | $AD$  |   $\texttt{MOD} (1+0+1, 2) = 0$ |  $\texttt{MOD} (0+0+1, 2) = 1$ |
|  2  | $B$    |   $\texttt{MOD} (0+0+0, 2) = 0$ |  $\texttt{MOD} (1+0+0, 2) = 1$ |
|  2  | $BCD$   |   $\texttt{MOD} (0+1+1, 2) = 0$ |  $\texttt{MOD} (1+1+1, 2) = 1$ |


이렇게 모든 처리에 대하여 구한 선형식의 값은 다음과 같이 함수 `conf.design()` 로 구할 수 있다.
아래 주어진 블럭배치의 결과는 자료 `df` 에서 처리들이 블럭에 배치된 것과 일치함을 확인할 수 있다.  


먼저 상호작용효과  $ACD$ 와 $BCD$ 가 블록과 교락되도록 정의할 수 있는 행렬을 만들어 보자.
아래 0 과 1 로 구성된 $4 \times 2$ 행렬을 보면, 먼저 4개의 인자를 나타내는 4개의 열로 구성되어 있으며 각 행은 블록과 교락된 상호작용효과에 해당되는 요인을 1로 표시한 것이다. 따라서 첫 행은 $ACD$ 에 해당되는 요인들을 1로 표시하고 나머지 행은 $BCD$ 에 해당되는 요인들을 1로 표시한 것이다.  

| A | B | C | D |
|:--------:|:-------:|:-------:|:-------:|
| 1 | 0 | 1 | 1 |
| 0 | 1 | 1 | 1 |

```{r}
Def.contrast <-   matrix(c(1,0,1,1, 0,1,1,1), 2,4, byrow=TRUE)
Def.contrast
```

다음으로 위에서 정의한 행렬을 이용하여 상호작용효과  $ACD$ 와 $BCD$ 가 블록과 교락되도록 실험을 설계해 보자. 아래 함수 `conf.design()` 를 사용하는 경우 인자들의 역활은 다음과 같다. 

- `G` : 상호작용효과를 정의하는 행렬
- `p` : 실험의 수준
- `block.name` : 블럭의 이름
- `treatment.names` : 처리의 이름


```{r}
df2 <- conf.design(G=Def.contrast , p=2, block.name = "블럭", treatment.names=c("A", "B", "C", "D"))
df2
```


아래 함수 `conf.design()` 의 결과  `df2` 는 앞에서 만든 실험자료 `df` 와 처리와 블럭의배정이 일치하는 것을 확인할 수 있다.

### 결합요인 


상호작용효과  $ACD$ 와 $BCD$ 가 블록과 교락되어 있을 경우 발생하는 **결합요인**은 $AB$ 이다.
따라서 상호작용효과 $AD$ 도 블록 효과와 교락된다.


$$ ACD \times BCD = ABC^2 D^2= AB $$

### Yates 계산법


이제 자료 `df` 에 함수 `yates()` 를 다음과 같이 적용하여 각 효과의 추정치(effect)를 게산해 보자.
참고로 `attr(a, "mean")` 는 Yates  추정치가 저장된 `a` 에서 반응값의 전체 평균 $\bar y_{....}$ 을 구하는 함수이다.

```{r}
a <- yates(df$y, c("A", "B", "C", "D"))
a
attr(a, "mean")
```

이제 위의 결과를 이용하여 교과서 표 8.4 와 동일한 Yates  계산의 결과를 구해보자.

```{r}
yates_effect <- data.frame(treat = names(a), effect= a)
yates_effect
totalmean <-  data.frame(treat="(0)", effect = attr(a, "mean"))
totalmean 
yates_effect <- rbind(totalmean, yates_effect)
yates_effect
```

위에서 구한  데이터프레임의 `effect`  는 평균 효과를 의미한다. 예를 들어서 처리 $A$ 에 대한 효과는 다음과 같이
구한다.

$$
\begin{aligned}
A & = \frac{1}{8} (a + ab + ac + abc + ad + abd + acd + abcd - (0) - b -c -bc -d - bd - cd -bcd) \\
  & =\frac{1}{8} (T_{1...} - T_{0...}) \\
  & = \bar {y}_{1...} - \bar {y}_{0...} \\
  & = 21.625 
\end{aligned}  
$$

따라서 제곱합을 구하는 방법은 처리합의 차를 제곱한 값 $(T_{1...} - T_{0...})^2$ 을 총 실험의 크기 $n=16$ 으로 나눈다.
이는 평균처리 효과를 제곱한 값에 4를 곱해주는 양과 같다.

$$ SS_A =  \frac{(T_{1...} - T_{0...})^2}{16} = 4 (\bar {y}_{1...} - \bar {y}_{0...})^2  $$

이제 위에서 구한 평균 처리 효과를 이용하여 제곱합을 구해보자. 주의할 점은 평균 처리 효과가 저장된 `yates_effect` 의 첫 행은 전체평균 $\bar y_{....} = T_{....}/16$ 이 저장되어 있기 때문에  4를 한번 더 곱해주어야 한다.

$$ CT = \frac{T_{....}^2}{16} = 16 (\bar y_{....})^2$$

```{r}
yates_effect$SS <- 4*yates_effect$effect^2
yates_effect$SS[1] <- yates_effect$SS[1] *4
yates_effect
```

```{r,echo=F, out.width="80%", fig.asp=1.0, fig.align='center', fig.cap='예제 8.2 Yates 계산' }
knitr::include_graphics("../images/ex82-yates.png")
```


### 블럭변동 


자료에서 블럭의 변동을 구하는 방법은 교과서 231 에 나온 것처럼 각 블럭에 대한 관측값의 합을 구해서 변동의 공식을 이용할 수 있다.  각 블럭 안의 관측값들 합을 $T_i$라고 하면 

$$ SS_{block} = \frac{1}{4} \sum_{i=1}^4  T^2_i - CT \quad \text{where } CT=\frac {T^2}{(4)(4)}  $$

```{r,echo=F, out.width="80%", fig.asp=1.0, fig.align='center', fig.cap='예제 8.2 블럭 제곱합' }
knitr::include_graphics("../images/ex82-block.png")
```


또한 다음과 같은 선형식을  R 록 적합식키고 분산분석을 이용하여 블럭의 변동($SS_{block}$)을 구할 수 있다. 아래 함수  
`anova()` 결과에 의하면 $SS_{block} = 38.19$ 이다.


$$ y_{ij} = \mu + \text{(block)}_i + e_{ij} $$ 
```{r}
res_block <- lm(y~block, data=df)
anova(res_block)
```

블럭의 변동은 상호작용 효과 $ACD$, $BCD$, $AB$ 에 대한 제곱합들의 합과 같다.


$$ SS_{block} = SS_{ACD} + SS_{BCD} + SS_{AB} = 10.5625	+  27.5625 +0.0625 = 38.19 $$

```{r}
yates_effect %>% filter(treat == "ACD" | treat == "BCD" | treat == "AB")
```

### 핵심요인의 선별 


핵심요인의 선별하기 위하여 먼저 각 처리의 제곱합을 순서대로 나열해 보자. 주요인 $A$, $C$, $D$ 와 상호작용 효과  $AC$ 와 $AD$의 제곱합이 다른 것보다 크게 나타나는 것을 볼 수 있다.

```{r}
yates_effect %>%  arrange(desc(SS))
```

이제 모든 효과가 포함된 완전모형(full model)을 적합시키고 반정규확률 그림을 그려서 핵심효인을 다시 찾아보자. 
제곱합을 비교할 때와 같이 주요인 $A$, $C$, $D$ 와 상호작용 효과  $AC$ 와 $AD$이 핵심 요인으로 보여진다.

```{r}
fullmodel <- lm (y~ A*B*C*D, data=df) 
DanielPlot(fullmodel, half=TRUE)
```


### 최종 모형

위의 핵심요인의 선별 결과를 고려하여 주요인 $A$, $B$, $C$, $D$ 와 상호작용 효과  $AC$ 와 $AD$ 를 포함하는 
축소된 모형을 최종모형으로 적합해 보자. 축소모형에는 당연히 블럭효과도 포함해야 한다. 또한 오차항에는 블럭과 교럭돤 상호작용 효과들과
축소모형에 포함된 효과들을 제외한 다른 효과들이 풀링된다.

$$ SS_E = SS_{B \times C} + SS_{B \times D} + SS_{C \times D} + SS_{A \times B \times C} + SS_{A \times B \times D } + SS_{A \times B \times C \times D}$$

```{r}
finalmodel <- lm(y ~ block + A +B + C+ D + A:C + A:D, data=df)
anova(finalmodel)
```


## 상호작용 그림 


```{r}
with(df, interaction.plot(x.factor = A, trace.factor = C,  response = y))
```

```{r}
with(df, interaction.plot(x.factor = A, trace.factor = D,  response = y))
```


## 8장 연습문제 {#exerxise8}

다음은 8장의 연습문제를 풀 때 도음이 되는 R 프로그램이다.  


### 연습문제 1


```{r}
X1 <- FrF2(nruns=16, nfactors=4, randomize = FALSE,  default.level=c(0,1))
X1
yates(rep(0,16))
Def.contrast1 <- c(1,1,1,1)
conf.design(G=Def.contrast1 , p=2, block.name = "블럭", treatment.names=c("A", "B", "C", "D"))
```

### 연습문제 4

```{r}
X2 <- FrF2(nruns=8, nfactors=3, randomize = FALSE,  default.level=c(0,1))
X2
yates(rep(0,8))
Def.contrast2 <- c(1,1,1)
conf.design(G=Def.contrast2 , p=2, block.name = "블럭", treatment.names=c("A", "B", "C"))
```


### 연습문제 10

```{r}
X3 <- FrF2(nruns=64, nfactors=6, randomize = FALSE,  default.level=c(0,1))
X3
yates(rep(0,64))
Def.contrast3 <-   matrix(c(1,1,1,1,0,0, 1,1,0,0,1,1), 2,6, byrow=TRUE)
conf.design(G=Def.contrast3 , p=2, block.name = "블럭", treatment.names=c("A", "B", "C", "D", "E", "F"))
```

