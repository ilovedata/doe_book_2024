# 2수준 요인배치법 {#sec-twolevels}

```{r warning=FALSE, echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
source(here::here("common", "_common.R"))
```

## 반복이 없는 $2^3$ 요인배치법 {#threefactor}


먼저 반복이 없는 $2^3$ 요인배치법이 적용되는  교과서 예제 7.3 에 대하여 논의합니다. 



###  처리조합 자료의 생성 

먼저 R 프로그림을 이용하여 분석을 하기 위해서는 실험 자료를 `data.frame` 형식으로 만들어야 한다.

먼저 각 요인의 수준을 조합하여 처리의 조합을 만들어 보자.  처리의 조합을 만드는 일은 일일이 손으로 
처리 조합을  만들 수 있지만 패키지 `FrF2` 에 있는 함수 `FrF2()`를 사용하면 처리 조합에 대한 데이터프레임을 쉽게 만들 수 있다. 

이제 $2^3$ 요인배치법의 처리 조합은 다음과 같이 만들 수 있다.

```{r}
X <- FrF2(nruns=8, nfactors=3, randomize = FALSE)
X
```

위에서 함수 `FrF2()`는 다음과 같은 인자를 가진다. 

- `nruns` : 처리 조합의 개수
- `nfactors` :  요인의 개수
- `randomize=TRUE` : 처리조합의 순서를 임의로 바꾸는 명령

```
FrF2(nruns, nfactors, randomize=TRUE)
```

우리는 지금 3개의 요인을 가진 2요인 배치법을 고려하므로 위와 같이   `nruns=8`, `nfactors=3` 으로 지정해야 한다. 또한 실험을 직접 실행하는 것이 아니므로 실험의 순서는 임의화 하지 않는다 (`randomize = FALSE`).
유의할 점은 요인의 이름은 다른 지정을 하지 않으면 알파벳 대문자 순서(`A`, `B`, `C`,...)로 지정해 준다.

이제 반응값을 위에서 생성한 처리의 조합순서대로 생성하고  함수 `cbind()` 를 이용하여 실험자료를 만들어 보자.


```{r}
y <- c(2,-5,15,13,-12,-17,-2,-7)
df <- cbind(X,y)
df %>%  kbl() %>%   kable_paper("hover", full_width = F)
```


::: {.callout-caution}

위에서 작성한 3 요인의 2수준 배치법의 자료에서 처리의 순서는 **표준형 순서(standard order)**로 
정렬되어 있다. 

표준형 순서는 요인의 순서를 `A`, `B`, `C` 로 고려한다면 제일 먼저 나오는 
요인의 수준이 가장 빨리 변하고 다음 요인의 순서가 그 보다 느리게 변하며 가장 마지막의 요인에 대한 수준의 순서가 가장 느리게 변하는 것을 의미한다. 

즉 요인 `A` 의 순서는 `-+-+-+-+`, 요인 `B`의 순서는 `--++--++` 이며 마지막 요인 `C`의 순서는 
`----++++` 이다.

함수 `FrF2()` 는 `randomize = FALSE` 로 지정해 주면 처리의 순서를 표준형 순서로 생성한다.  
:::


### 처리효과의 계산 

#### 인수분해법

이제 교과서에서 나오는 방법으로 처리 효과를 계산헤 보자. 

요인 A 에 대한  주 효과는 인수분해 방법을 통해서 다음과 같이 계산할 수 있다.  

$$ A = \frac{1}{4} (a-1)(b+1)(c+1) = \frac{1}{4} [(a + ac + ab + abs) - ((1)-c-b-bd)] $$

따라서 A 에 대한 주효과는 다음과 같이 계산된다.

$$ A = \frac{1}{4} [(-5+13-17-7)-(2 +15-12-2)] = -4.75 $$

다른 모든 요인들의 주효과와 상호작용 효과는 교과서 181-182에 나오는 인수분해법으로 구할 수 있다.


####  함수 `yates()` 

패키지 `unrepx` 에 나오는 함수 `yates` 를 이용하면 손쉽게 처리 효과를 계산할 수 있다.

```{r}
yates(df$y, labels = c("A", "B", "C"))
```

함수 `yates` 는 첫 번째 인자로 표준형 순서로 정렬되어 있는 반응값의 벡터를 넣어주고 두 번째 인자 `labels` 로 요인의 이름으로 구성된  문자 벡터를 넣어준다.  함수 `yates` 의 결과는 각 요인의 효과를 계산해 주고 마지막으로 전체 평균 $\bar y$ 를 생성한다.


함수 `yates()`를 이용하면 표준형 순서로서 영문 소문자 표기법으로 표시된  처리조합을 구할 수 있다.
예를 들어서 $2^4$ 실험법에 대하여  abcd 표기법으로 표준형 순서로 정렬된 처리 조합을  아래와 같이 구할 수 있다,

물론 가장 처음의 처리 `(1)` 은 결과에 나타나지 않는다.

```{r}
XX <- FrF2(16, 4, randomize=FALSE)
yy <- 1:16
df4 <- cbind(XX,yy)
df4 %>%  kbl() %>%   kable_paper("hover", full_width = F)
```


```{r}
yates(df4$yy , c("A", "B", "C", "D"))
```

####  R 프로그램을 이용 

R 프로그램을 이용하여  Yates 방법으로 처리 효과를 계산해주는 함수 `myyates` 를 만들어 보자.

```{r}
# yates 방법으로 처리 효과를 계산해주는 함수
myyates <- function(y) {
   n <- length(y)  #자료의 수
   k = round(log(n)/log(2))  # 요인의 수
   nhalf <- n/2  # (자료의 수)/2
   
   res<- rep(0,n)
   
   for ( i in 1:k ){
     for (j in 1:nhalf) {
       res[j] <- y[2*j-1] + y[2*j]
     } 
     for (j in 1:nhalf) {
       res[j+nhalf] <- -y[2*j-1] + y[2*j]
     } 
     y <-res
   }
   res <- res/nhalf
   res[1] <- res[1]/2
   res
}   
   
myyates(df$y)  
```

함수 `myyates`  를 이용하여 얻은 결과에서 처음 나온 수는 전체 평균의 2 배이며 두 번째 수부터  표준 효과의 추정값이다. 

#### 회귀식의 이용 

이제 위에서 고려한 데이터프레임 `df` 에 대한 회귀식을 적합시키자.

아래 회귀식에서 `y~A*B*C`  는 변수 `y` 를 반응변수로 하고 3개의 요인 `A`, `B`, `C` 의 각 개별 효과와 모든 상호작용 효과를 고려한 선형 모형이다.

즉, 아래 적합한 모형은 요인의 수준이 모두 범주형인 경우이므로 다음과 같은 3원배치 분산분석 모형을 적합하는 것이다.

$$
y_{ijk} = \mu + \alpha_i + \beta_j + \gamma_k + (\alpha \beta)_{ij} +(\beta \gamma)_{jk} + (\alpha \gamma )_{ik} + (\alpha \beta \gamma_k) + e_{ijk},\quad i=1,2,~j=1,2,~k=1,2 
$$ {#eq-satmodel}




```{r}
fm1 <- lm (y~ A*B*C, data=df) 
summary(fm1)
```


위의 모형 @eq-satmodel 은 모수의 개수가 $1+2+2+2+4+4+4+8=27$이다. 하지만 관측값이 8개이기 때문에 정규방정식의 해가 유일하게 존재하지 않는다. 따라서 최소한 19개의 제약 조건이 필요하다. 고차원 배치법에 대한 회귀모형에서 제약조건을 주는 방법은 과목의 범위를 벋어나므로 생략한다. 

위의 추정 결과는 8개의 관측값을 가지고 8개의 모수를 가진 모형을 적합하는 경우이며 이렇게 관측값의 개수와 모수의 개수가 같은 모형을 **포화모형(saturated model)**이라고 부른다. 포화모형에서는 오차항의 분산을 추정할 수 있는 잔차가 모두 0이기 때문에 $\sigma^2$ 을 추정할 수 없다. 따라서 표준오차도 구할 수 없다. 


회귀식의 계수에 대한 추정치에서 절편을 제외한 추정치는 대응하는 효과 추정치의 절반인 것을 알 수 있다. 
절편의 주정치는 전체 평균 $\bar y$이다.


```{r}
coef(fm1)[-1]*2
```

위에서 적합한 회귀식을 선형모형 $\pmb y = \pmb X \pmb \beta + \pmb e$ 로 보면 모형의 계획행렬 $\pmb X$ 는 다음과 같이 나오며 열이 각 효과의 대비인 것을 알 수 있다.

```{r}
X <- model.matrix(fm1)
X
yvec <- matrix(df$y, 8, 1)
yvec
```

따라서 위에서 함수 `model.matrix`  로 구한 행렬 $\pmb X$ 의 전치 $\pmb X^t$ 에 반응 변수 벡터 $\pmb y$ 를 곱해주면, 즉 $\pmb X^t \pmb y$ 는 각 효과에 대하여 합으로 구한 대비를 얻을 수 있다. 이렇게 합으로 구한 대비를 적절한 수로 나누어 주면 평균의 대비도 얻을 수 있다. 이 예제와 같은 반복이 없는 $2^3$ 배치법은 4로 나누어 주면 된다.  주의할 점은 앞에서 효과를 회귀계수로 구하는 경우와 마찬가지로 $\pmb X^t \pmb y$ 의 첫 번째 원소는 모든 반응값의 총합 $T_{...}$ 인 것에 유의하자. 


$$
 \pmb X^t \pmb y =
 \begin{bmatrix}
 T_{...} \\
 T_{1..} - T_{0..} \\
 \vdots 
 \end{bmatrix}
$$

예를 들어서 $A$ 에 대한 주효과는 다음과 같이 구할 수 있으며 아래에서 `total_effect` 가 $T_{1..} - T_{0..}$ 이고
`mean_effect` 는 $(T_{1..} - T_{0..})/4$ 이다.

$$
A = \frac{1}{4} ( T_{1..} - T_{0..}) = \frac{1}{4} 
\begin{bmatrix}
-1 & 1 & -1 & 1 & -1 & 1 & -1 & 1 
\end{bmatrix}
\begin{bmatrix}
2 \\
-5 \\ 
15 \\
13 \\
-12 \\
-17 \\
-2 \\
-7
\end{bmatrix}
= -4.75
$$


```{r}
total_effect <- t(X) %*% yvec
total_effect <- total_effect[-1]
total_effect
mean_effect <- total_effect/4
mean_effect
```


앞에서 회귀모형의 계수가 각 효과의 2 배로 나타나는 이유는 다음과 같이 회귀식의 계수를 구하는 정규방정식에서 $\pmb X^t \pmb X$ 가 대각행렬이며 대각원소의 값이 자료의 개수 $(2^3) = 8$ 로 나타나기 때문이다. 효과를 구하기 구하는  때는 함으로 이루어진 대비를 $2^2=4$ 로 나누기 떄문에 회귀계수의 추정값은 효과의 추정값의 절반으로 나타난다.

$$
\pmb X^t \pmb X \pmb \beta = \pmb X^t \pmb y  \quad \rightarrow \quad \hat{\pmb \beta} = (\pmb X^t \pmb X)^{-1}\pmb X^t \pmb y 
$$

```{r}
t(X) %*% X
```

```{r}
beta_hat <- solve(t(X) %*% X) %*% t(X) %*% yvec
beta_hat
```
### 분산분석 

분산분석표는 앞에서 적합한 모형 @eq-satmodel 을 적합한 후 `aov()` 또는 `anova()` 함수를 적용하면 구할 수 있다. 

앞에서 언급하였듯이 모형 @eq-satmodel 은 포화모형이므로 제곱합은 구할 수 있지만 
잔차제곱합을 구할 수 없으므로 가설 검정은 할 수 없다. 

```{r}
anova(fm1)
```

위의 분산분석표에서  효과 $A \times B$, $A \times C$, $A \times B \times C$ 에 대한 제곱합의 크기가
다른 효과에 비하여 상대적으로 매우 작다.

### 핵심 요인효과의 선별 

핵심요인 효과는 효과 추정치의 절대값 $| \bar y_1 -\bar y_0|$ 들을 가지고 반정규확률 그림을 그려서 선별할 수 있다.


반정규확률 그림은 패키지 `FrF2`에 있는 함수 `DanielPlot()` 를 사용하여 구할 수 있다.


```{r}
DanielPlot(fm1, half=TRUE)
```

위의 반정규확률 그림을 보면 주요인 $B$ 와 $C$ 가 핵심 요인임을 알 수 있다. 

교과서 예제의 결론과 같이 제곱합이 작은 3개의 효과 $A \times B$, $A \times C$, $A \times B \times C$ 를 풀링하여 모형을 다시 적합해 보자.

이제 회귀식을 적합시키자.
```{r}
fm11 <- lm (y~ A+B+C+B*C, data=df) 
summary(fm11)
anova(fm11)
```

### 부록: 처리 조합을 만드는 다른 방법

참고로 처리 조합의 데이터프레임을 만드는 다른 방법을 알아보자.

함수 `expand.grid()` 는 인자로 주어진 벡터들의 원소들로 구성된 모든 조합을 만들어 주는 함수이다. 

```{r}
X1 <-  expand.grid(A = gl(2, 1, labels = c("-1", "1")),
                   B = gl(2, 1, labels = c("-1", "1")),
                   C = gl(2, 1, labels = c("-1", "1")))
X1
```

함수 `expand.grid()` 의 인자에 대한 설명은 다음과 같다.

```
gl(n, k, length = n*k, labels = seq_len(n), ordered = FALSE)

- n: an integer giving the number of levels.
- k: an integer giving the number of replications.
- labels: an optional vector of labels for the resulting factor levels.
- ordered: a logical indicating whether the result should be ordered or not.
```

만약 반복이 있다면 데이터프레임을 함수 `rbind()` 를 이용하여 붙이면 된다. 

```{r}
X2 <- rbind(X1, X1)
X2
```




## 반복이 없는 $2^4$ 요인배치법 


먼저 반복이 없는 $2^4$ 요인배치법이 적용되는  교과서 예제 7.4 에 대하여 논의합니다. 



###  처리조합 자료의 생성 

```{r}
X <- FrF2(nruns=16, nfactors=4, randomize = FALSE)
X
y<- c(-1, 0, 9, 4, 5, 3, 11, 8,-1, -9, 1, 5, -9, -13, -5, -4)
df2 <- cbind(X,y)
df2 %>%  kbl() %>%   kable_paper("hover", full_width = F)
```      


### 처리효과의 계산 

```{r}
yates(df2$y, c("A", "B", "C", "D"))
```

#### 포화모형의 적합

이제 포화모형인 회귀식을 적합시키자.

```{r}
fm2 <- lm (y~ A*B*C*D, data=df2) 
summary(fm2)
```


```{r}
coef(fm2)[-1]*2
```


```{r}
anova(fm2)
```

#### 3차 이상의 상호작용을 풀링 

이제 3차 이상의 상호적용을 풀링한 모형을 적합시키자.

```{r}
fm21 <- lm (y~ A + B + C+ D+ A*B + A*C + A*D + B*C + B*D + C*D, data=df2) 
summary(fm21)
```


```{r}
anova(fm21)
```


### 핵심 요인효과의 선별 

```{r}
DanielPlot(fm2, half=TRUE)
```

```{r}
fm22 <- lm (y~ A+B+C+D+ C*D, data=df2) 
summary(fm22)
anova(fm22)
```




## 반복이 있는 $2^3$ 요인배치법


이제 반복이 있는 $2^3$ 요인배치법이 적용되는  예제에 대하여 논의합니다. 

자료는 [@montgomery2017design] 이 나온 예제 6.1 을 사용하였다. 반도체 공정에서 웨이퍼를 만드는 공정에서 
다음과 같은 2개의 수준을 가진 3개의 요인과 반응변수을 고려한 실험을 실시하였다.

- 요인 A: electrodes
- 요인 B: the gas flow 
- 요인 C: RF power applied to the cathode 
- 반응변수 : etch rate for silicon nitride

각 처리 조합마다 2개의 반복 측정값을 얻었다. 
을 얻었다.


###  처리조합 자료의 생성 

패키지 `FrF2` 에 있는 함수 `FrF2()`에서  `replications=2`를 지정하면 2개의 반복이 있는  $2^3$ 요인배치법의 처리 조합을 생성해준다.

이제 $2^3$ 요인배치법의 처리 조합은 다음과 같이 만들 수 있다.

```{r}
X <- FrF2(nruns=8, nfactors=3, randomize = FALSE, replications=2)
X <- as.data.frame(X)
X
X <- X[,-4]  # 블럭변수가 필요없으모 제외
X
```

이제 반응값을 처리조합과 결합히여 실험자료를 만들어 보자.

```{r}
y <- c(550, 669, 633, 642, 1037, 749, 1075, 729, 604, 650, 601, 635, 1052, 868, 1063, 860)
df3 <- cbind(X,y)
df3 %>%  kbl() %>%   kable_paper("hover", full_width = F)
```


### 처리효과의 계산 


#### 회귀식의 이용 

이제 회귀식을 적합시키자.
```{r}
fm3 <- lm (y~ A*B*C, data=df3) 
summary(fm3)
```


위의 추정 결과는 16개의 관측값을 가지고 8개의 모수를 가진 모형을 적합하는 경우이므로  $\sigma^2$을 추정할 수 있다.


회귀식의 계수에 대한 추정치에서 절편을 제외한 추정치는 대응하는 효과 추정치의 절반인 것을 알 수 있다. 
절편의 주정치는 전체 평균 $\bar y$이다.
```{r}
coef(fm3)[-1]*2
```



### 분산분석 

```{r}
anova(fm3)
```

위의 분산분석표에서  효과  $B \times C$, $A \times B \times C$ 에 대한 제곱합의 크기가
다른 효과에 비하여 상대적으로 매우 작다.

### 핵심 요인효과의 선별 

핵심요인 효과는 효과 추정치의 절대값 $| \bar y_1 -\bar y_0|$ 들을 가지고 반정규확률 그림을 그려서 선별할 수 있다.


반정규확률 그림은 패키지 `FrF2`에 있는 함수 `DanielPlot()` 를 사용하여 구할 수 있다.


```{r}
DanielPlot(fm3, half=TRUE)
```

위의 반정규확률 그림을 보면 주요인 $A$, $C$ 와  상호작용 $A \times C$ 가 핵심 요인임을 알 수 있다. 

이제   핵심 요인으로 판단되는 주요인 $A$, $C$ 와  상호작용 $A \times C$ 만을 포함한 모형을 다시 적합해 보자.

이제 회귀식을 적합시키자.

```{r}
fm31 <- lm (y~ A+C+A*C, data=df3) 
summary(fm31)
anova(fm31)
```